<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from beluga_default.xacro           | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- Copyright (c) 2016 The UUV Simulator Authors.
     All rights reserved.

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->
<robot name="beluga">
  <!-- Some pretty colors -->
  <material name="blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <material name="green">
    <color rgba="0.0 0.8 0.0 1.0"/>
  </material>
  <material name="grey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="grey2">
    <color rgba="0.9 0.9 0.9 1.0"/>
  </material>
  <material name="red">
    <color rgba="0.8 0.0 0.0 1.0"/>
  </material>
  <material name="orange">
    <color rgba="1.0 0.5 0.0 1.0"/>
  </material>
  <material name="white">
    <color rgba="1.0 1.0 1.0 1.0"/>
  </material>
  <material name="black">
    <color rgba="0.05 0.05 0.05 1.0"/>
  </material>
  <!-- ROTOR DYNAMICS MACROS -->
  <!-- First order dynamics -->
  <!--
    MACROS FOR CONVERSION FUNCTIONS BETWEEN ROTOR'S ANG. VELOCITY AND
    THRUSTER FORCE
  -->
  <!-- Thruster module macros  -->
  <!--
    Thruster model with first order dynamic model for the rotor dynamics
    and a proportional non-linear steady-state conversion from the rotor's
    angular velocity to output thrust force
  -->
  <link name="beluga/base_link">
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.26" ixy="0.001" ixz="0.02" iyy="0.40" iyz="0.001" izz="0.35"/>
    </inertial>
    <!-- Main Body -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.48538 0.27 0.327"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.005"/>
      <geometry>
        <box size="0.6 0.47 0.36"/>
      </geometry>
    </collision>
    <!-- Left Front Thruster Mount -->
    <visual>
      <origin rpy="0 0 -3.141592653589793" xyz="0.27043 0.195 -0.025"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/angled_thruster_mount.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!-- Right Front Thruster Mount -->
    <visual>
      <origin rpy="3.141592653589793 0 -3.141592653589793" xyz="0.27043 -0.195 0.025"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/angled_thruster_mount.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!-- Left Back Thruster Mount -->
    <visual>
      <origin rpy="0 3.141592653589793 -3.141592653589793" xyz="-0.27043 0.195 0.025"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/angled_thruster_mount.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!-- Right Back Thruster Mount -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.27043 -0.195 -0.025"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/angled_thruster_mount.dae" scale="0.001 0.001 0.001"/>
      </geometry>
    </visual>
    <!-- Left Middle Thruster Mount -->
    <visual>
      <origin rpy="0 0 0" xyz="0 0.165 -0.035"/>
      <geometry>
        <box size="0.09 0.06 0.05"/>
      </geometry>
    </visual>
    <!-- Right Middle Thruster Mount -->
    <visual>
      <origin rpy="0 0 0" xyz="0 -0.165 -0.035"/>
      <geometry>
        <box size="0.05 0.06 0.05"/>
      </geometry>
    </visual>
    <!-- Middle Back Thruster Mount -->
    <visual>
      <origin rpy="0 0 0" xyz="-0.26769 0 0.1336"/>
      <geometry>
        <box size="0.05 0.05 0.05"/>
      </geometry>
    </visual>
  </link>
  <link name="base_link"/>
  <joint name="beluga/dummy_joint" type="fixed">
    <parent link="base_link"/>
    <child link="beluga/base_link"/>
  </joint>
  <gazebo reference="beluga/base_link">
    <selfCollide>false</selfCollide>
  </gazebo>
  <!-- Set up hydrodynamics plugin -->
  <gazebo>
    <plugin filename="libuuv_underwater_object_ros_plugin.so" name="beluga_uuv_plugin">
      <fluid_density>1028</fluid_density>
      <flow_velocity_topic>hydrodynamics/current_velocity</flow_velocity_topic>
      <debug>1</debug>
      <link name="beluga/base_link">
        <neutrally_bouyant>0</neutrally_bouyant>
        <volume>0.011054</volume>
        <box>
          <width>0.2384</width>
          <length>0.448</length>
          <height>0.28066</height>
        </box>
        <center_of_buoyancy>0 0 0</center_of_buoyancy>
        <hydrodynamic_model>
          <type>fossen</type>
          <added_mass>
              3.899   -0.034  -0.517  0.043   -0.828  -0.039
              -0.034  6.110   0.256   2.047   -0.029  0.314
              -0.517  0.256   18.300  0.031   -1.932  0.054
              0.043   2.047   0.031   1.675   -0.050  0.105
              -0.828  -0.029  -1.932  -0.050  2.213   -0.006
              -0.039  0.314   0.054   0.105   -0.006  0.622
            </added_mass>
          <linear_damping>
              -9.352  -8.685  -91.050 -10 -10 -5
            </linear_damping>
          <quadratic_damping>
              -93.528 -124.066 -227.626 -20 -20 -15
            </quadratic_damping>
        </hydrodynamic_model>
      </link>
    </plugin>
  </gazebo>
  <joint name="beluga/thruster_1_joint" type="continuous">
    <origin rpy="0 0 -0.7853981633974483" xyz="0.27743 0.188 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_1"/>
  </joint>
  <link name="beluga/thruster_1">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_1_thruster_model">
      <linkName>beluga/thruster_1</linkName>
      <jointName>beluga/thruster_1_joint</jointName>
      <thrusterID>1</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_1">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_2_joint" type="continuous">
    <origin rpy="0 0 0.7853981633974483" xyz="0.27743 -0.188 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_2"/>
  </joint>
  <link name="beluga/thruster_2">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_2_thruster_model">
      <linkName>beluga/thruster_2</linkName>
      <jointName>beluga/thruster_2_joint</jointName>
      <thrusterID>2</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_2">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_3_joint" type="continuous">
    <origin rpy="0 0 -2.356194490192345" xyz="-0.27743 0.188 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_3"/>
  </joint>
  <link name="beluga/thruster_3">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_3_thruster_model">
      <linkName>beluga/thruster_3</linkName>
      <jointName>beluga/thruster_3_joint</jointName>
      <thrusterID>3</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_3">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_4_joint" type="continuous">
    <origin rpy="0 0 2.356194490192345" xyz="-0.27743 -0.188 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_4"/>
  </joint>
  <link name="beluga/thruster_4">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_4_thruster_model">
      <linkName>beluga/thruster_4</linkName>
      <jointName>beluga/thruster_4_joint</jointName>
      <thrusterID>4</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_4">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_5_joint" type="continuous">
    <origin rpy="0 -1.5707963267948966 0" xyz="0 0.195 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_5"/>
  </joint>
  <link name="beluga/thruster_5">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_5_thruster_model">
      <linkName>beluga/thruster_5</linkName>
      <jointName>beluga/thruster_5_joint</jointName>
      <thrusterID>5</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_5">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_6_joint" type="continuous">
    <origin rpy="0 -1.5707963267948966 0" xyz="0 -0.195 0"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_6"/>
  </joint>
  <link name="beluga/thruster_6">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_6_thruster_model">
      <linkName>beluga/thruster_6</linkName>
      <jointName>beluga/thruster_6_joint</jointName>
      <thrusterID>6</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_6">
    <selfCollide>false</selfCollide>
  </gazebo>
  <joint name="beluga/thruster_7_joint" type="continuous">
    <origin rpy="0 -1.5707963267948966 0" xyz="-0.29169 0 0.16908"/>
    <axis xyz="1 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/thruster_7"/>
  </joint>
  <link name="beluga/thruster_7">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="0.0" ixy="0.0" ixz="0.0" iyy="0.0" iyz="0.0" izz="0.0"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/propeller.dae" scale="1 1 1"/>
      </geometry>
    </visual>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </collision>
    <inertial>
      <mass value="20"/>
      <origin rpy="0 0 0" xyz="0 0.005 -.03"/>
      <inertia ixx="0.01" ixy="0.01" ixz="0.01" iyy="0.01" iyz="0.01" izz="0.01"/>
    </inertial>
  </link>
  <gazebo>
    <plugin filename="libuuv_thruster_ros_plugin.so" name="beluga_7_thruster_model">
      <linkName>beluga/thruster_7</linkName>
      <jointName>beluga/thruster_7_joint</jointName>
      <thrusterID>7</thrusterID>
      <dynamics>
        <type>FirstOrder</type>
        <timeConstant>0.01</timeConstant>
      </dynamics>
      <conversion>
        <type>Basic</type>
        <rotorConstant>0.17</rotorConstant>
      </conversion>
    </plugin>
  </gazebo>
  <gazebo reference="beluga/thruster_7">
    <selfCollide>false</selfCollide>
  </gazebo>
  <!-- Sensor link -->
  <link name="beluga/camera_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.0015"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/oe14-372.dae" scale="0.5 0.5 0.5"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="beluga/camera_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0.24269 0 0.0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/camera_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <link name="beluga/camera_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.6666660000000001e-12" ixy="0.0" ixz="0.0" iyy="1.6666660000000001e-12" iyz="0.0" izz="1.6666660000000001e-12"/>
    </inertial>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="beluga/camera_optical_joint" type="revolute">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="beluga/camera_link"/>
    <child link="beluga/camera_link_optical"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="beluga/camera_link">
    <sensor name="camera" type="camera">
      <update_rate>30</update_rate>
      <camera name="camera">
        <horizontal_fov>1.8125</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <updateRate>30</updateRate>
        <cameraName>beluga/camera</cameraName>
        <frameName>camera_link_optical</frameName>
        <attenuationR>0.0</attenuationR>
        <attenuationG>0.0</attenuationG>
        <attenuationB>0.0</attenuationB>
        <backgroundR>0</backgroundR>
        <backgroundG>0</backgroundG>
        <backgroundB>0</backgroundB>
        <!-- required for ros depth cam -->
        <imageTopicName>camera_image</imageTopicName>
        <pointCloudTopicName>camera_cloud</pointCloudTopicName>
        <depthImageTopicName>camera_depth</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera_depth_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>10.0</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <!-- Sensor link -->
  <link name="beluga/camera_bottom_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.0001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
    <visual>
      <geometry>
        <mesh filename="file:///home/sunny/catkin_ws/install/beluga_simulator/share/beluga_simulator/meshes/oe14-372.dae" scale="0.5 0.5 0.5"/>
      </geometry>
    </visual>
    <collision>
      <geometry>
        <cylinder length="1e-06" radius="1e-06"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="beluga/camera_bottom_joint" type="revolute">
    <origin rpy="0 1.57 0" xyz="0.0 0.0 -0.1635"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/camera_bottom_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <link name="beluga/camera_bottom_link_optical">
    <inertial>
      <mass value="0.001"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1.6666660000000001e-12" ixy="0.0" ixz="0.0" iyy="1.6666660000000001e-12" iyz="0.0" izz="1.6666660000000001e-12"/>
    </inertial>
    <collision>
      <!-- todo: gazebo needs a collision volume or it will ignore the pose of
           the joint that leads to this link (and assume it to be the identity) -->
      <geometry>
        <cylinder length="0.000001" radius="0.000001"/>
      </geometry>
      <origin rpy="0 1.5707963267948966 0" xyz="0 0 0"/>
    </collision>
  </link>
  <joint name="beluga/camera_bottom_optical_joint" type="revolute">
    <origin rpy="-1.5707963267948966 0 -1.5707963267948966" xyz="0 0 0"/>
    <parent link="beluga/camera_bottom_link"/>
    <child link="beluga/camera_bottom_link_optical"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo reference="beluga/camera_bottom_link">
    <sensor name="camera_bottom" type="camera">
      <update_rate>30</update_rate>
      <camera name="camera_bottom">
        <horizontal_fov>1.8125</horizontal_fov>
        <image>
          <width>1920</width>
          <height>1080</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>3000</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.02</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_bottom_controller">
        <updateRate>30</updateRate>
        <cameraName>beluga/camera_bottom</cameraName>
        <frameName>camera_bottom_link_optical</frameName>
        <attenuationR>0.0</attenuationR>
        <attenuationG>0.0</attenuationG>
        <attenuationB>0.0</attenuationB>
        <backgroundR>0</backgroundR>
        <backgroundG>0</backgroundG>
        <backgroundB>0</backgroundB>
        <!-- required for ros depth cam -->
        <imageTopicName>camera_image</imageTopicName>
        <pointCloudTopicName>camera_cloud</pointCloudTopicName>
        <depthImageTopicName>camera_depth</depthImageTopicName>
        <depthImageCameraInfoTopicName>camera_depth_info</depthImageCameraInfoTopicName>
        <pointCloudCutoff>10.0</pointCloudCutoff>
      </plugin>
    </sensor>
  </gazebo>
  <!-- IMU link -->
  <link name="beluga/imu_link">
    <inertial>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0" iyy="0.00001" iyz="0.0" izz="0.00001"/>
      <mass value="0.015"/>
      <!-- [kg] -->
      <origin rpy="0 0 0" xyz="0 0 0"/>
    </inertial>
  </link>
  <!-- IMU joint -->
  <joint name="beluga/imu_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="beluga/base_link"/>
    <child link="beluga/imu_link"/>
    <limit effort="0" lower="0" upper="0" velocity="0"/>
    <axis xyz="1 0 0"/>
  </joint>
  <gazebo>
    <plugin filename="libuuv_gazebo_ros_imu_plugin.so" name="libuuv_gazebo_imu_plugin">
      <!-- A good description of the IMU parameters can be found in the kalibr documentation:
           https://github.com/ethz-asl/kalibr/wiki/IMU-Noise-Model-and-Intrinsics -->
      <robot_namespace>beluga</robot_namespace>
      <!-- (string, required): ros namespace in which the messages are published -->
      <link_name>beluga/imu_link</link_name>
      <!-- (string, required): name of the body which holds the IMU sensor -->
      <sensor_topic>imu</sensor_topic>
      <!-- (string): name of the sensor output topic and prefix of service names (defaults to imu) -->
      <gyroscope_noise_density>0.0003394</gyroscope_noise_density>
      <!-- Gyroscope noise density (two-sided spectrum) [rad/s/sqrt(Hz)] -->
      <gyroscope_random_walk>3.8785e-05</gyroscope_random_walk>
      <!-- Gyroscope bias random walk [rad/s/s/sqrt(Hz)] -->
      <gyroscope_bias_correlation_time>1000.0</gyroscope_bias_correlation_time>
      <!-- Gyroscope bias correlation time constant [s] -->
      <gyroscope_turn_on_bias_sigma>0.0087</gyroscope_turn_on_bias_sigma>
      <!-- Gyroscope turn on bias standard deviation [rad/s] -->
      <accelerometer_noise_density>0.004</accelerometer_noise_density>
      <!-- Accelerometer noise density (two-sided spectrum) [m/s^2/sqrt(Hz)] -->
      <accelerometer_random_walk>0.006</accelerometer_random_walk>
      <!-- Accelerometer bias random walk. [m/s^2/s/sqrt(Hz)] -->
      <accelerometer_bias_correlation_time>300.0</accelerometer_bias_correlation_time>
      <!-- Accelerometer bias correlation time constant [s] -->
      <accelerometer_turn_on_bias_sigma>0.196</accelerometer_turn_on_bias_sigma>
      <!-- Accelerometer turn on bias standard deviation [m/s^2] -->
      <orientation_noise>0.01</orientation_noise>
      <update_rate>50</update_rate>
      <!-- Update period of accelerometer and gyroscope [s] -->
      <enable_gazebo_messages>false</enable_gazebo_messages>
      <enable_local_ned_frame>False</enable_local_ned_frame>
      <static_reference_frame>world</static_reference_frame>
    </plugin>
  </gazebo>
  <!-- Pressure  -->
  <!--
  <xacro:default_pressure_macro namespace="${namespace}" parent_link="${namespace}/base_link">
    <origin xyz="0 0 0" rpy="0 1.57 0"/>
  </xacro:default_pressure_macro> -->
  <gazebo>
    <plugin filename="libuuv_joint_state_publisher.so" name="uuv_joint_state_publisher">
      <robotNamespace>beluga</robotNamespace>
      <updateRate>5</updateRate>
    </plugin>
  </gazebo>
</robot>
